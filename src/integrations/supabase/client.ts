// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;

export const SUPABASE_ENABLED = Boolean(SUPABASE_URL && SUPABASE_PUBLISHABLE_KEY);

// Fallback stub to keep app functional when Supabase is not configured in dev/preview
const createStubBuilder = (listData: any[] | null = null) => {
  return {
    // Query-like methods return promises with empty data
    select: async () => ({ data: listData ?? [], error: null }),
    update: async () => ({ data: null, error: null }),
    upsert: async () => ({ data: null, error: null }),
    order: () => createStubBuilder(listData),
    eq: () => createStubBuilder(listData),
    gte: () => createStubBuilder(listData),
    single: async () => ({ data: null, error: null }),
  } as any;
};

const supabaseStub = {
  auth: {
    getUser: async () => ({ data: { user: null }, error: null }),
  },
  from: (_table: string) => createStubBuilder(),
} as any;

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase: ReturnType<typeof createClient<Database>> | typeof supabaseStub =
  SUPABASE_ENABLED
    ? createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
        auth: {
          storage: localStorage,
          persistSession: true,
          autoRefreshToken: true,
        },
      })
    : supabaseStub;